#ifndef BLACK_LITTERMAN_H
#define BLACK_LITTERMAN_H
#include "expectedreturns.h"
#include "impliedMVreturns.h"
#include "views_combiner.h"
#include "omega_computation.h"

/*
 * Black-Litterman model, is a model to get to expected returns,
 * making use of the views stated by the investors.
 * BL-returns imply a mixture between MV-equilibrium returns and the returns
 * from the views.
 * BL-returns = v_1 * R^eq + v_2 * Q
 * v_1 = [VCV^-1 + (P'* Omega^-1 * P * tau]^-1 * VCV^-1
 * v_2 = [VCV^-1 + (P'* Omega^-1 * P * tau]^-1 * [tau * P' * Omega^-1]
 */



class Black_Litterman : public Expected_returns{
public:
    Black_Litterman(Views_combiner* combined_views, Omega_computation* method, double market_inefficiency, double market_risk_aversion );
    Views_combiner* views;
    Omega_computation* omega_method;
    double tau;
    double gamma;
    Matrix<double> returns(Portfolio *Port);
};

#endif // BLACK_LITTERMAN_H
